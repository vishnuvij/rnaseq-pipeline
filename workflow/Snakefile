# --- Directories ---
FASTQC_DIR = "results/fastqc"
TRIM_DIR   = "results/trimmed"
ALIGN_DIR  = "results/alignment"
REF_DIR    = "reference"

# --- Final target ---
rule all:
    input:
        f"{ALIGN_DIR}/SRR000648.bam",
        "results/multiqc_report.html"

# --- Download FASTQ ---
rule download_fastq:
    output:
        "data/SRR000648.fastq.gz"
    shell:
        """
        fastq-dl --accession SRR000648 --outdir data --provider ena
        """

# --- FastQC on raw reads ---
rule fastqc_raw:
    input:
        "data/SRR000648.fastq.gz"
    output:
        html = f"{FASTQC_DIR}/SRR000648_fastqc.html",
        zip  = f"{FASTQC_DIR}/SRR000648_fastqc.zip"
    shell:
        """
        fastqc {input} --outdir {FASTQC_DIR}
        """

# --- Trim adapters & low-quality bases ---
rule trim_reads:
    input:
        "data/SRR000648.fastq.gz"
    output:
        f"{TRIM_DIR}/SRR000648_trimmed.fastq.gz"
    threads: 2
    params:
        adapter = "AGATCGGAAGAGC",   # common Illumina adapter
        q = 20,                      # quality trim threshold
        minlen = 20                  # drop reads shorter than this
    shell:
        r"""
        set -euo pipefail
        mkdir -p {TRIM_DIR}
        cutadapt -j {threads} -a {params.adapter} -q {params.q} -m {params.minlen} \
          -o {output} {input}
        """

# --- FastQC on trimmed reads ---
rule fastqc_trimmed:
    input:
        f"{TRIM_DIR}/SRR000648_trimmed.fastq.gz"
    output:
        html = f"{FASTQC_DIR}/SRR000648_trimmed_fastqc.html",
        zip  = f"{FASTQC_DIR}/SRR000648_trimmed_fastqc.zip"
    shell:
        """
        fastqc {input} --outdir {FASTQC_DIR}
        """

# --- MultiQC summary ---
rule multiqc:
    input:
        expand(f"{FASTQC_DIR}/{{sample}}_fastqc.html", sample=["SRR000648", "SRR000648_trimmed"])
    output:
        "results/multiqc_report.html"
    shell:
        """
        multiqc results/fastqc --outdir results
        """

# --- Reference genome (yeast) ---
GENOME_FASTA_GZ = f"{REF_DIR}/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz"

rule download_reference:
    output:
        GENOME_FASTA_GZ
    shell:
        r"""
        set -euo pipefail
        mkdir -p {REF_DIR}
        wget -O {output} https://ftp.ensembl.org/pub/release-111/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz
        """

# --- STAR genome index ---
STAR_INDEX = f"{REF_DIR}/star_index"

rule star_index:
    input:
        fasta = GENOME_FASTA_GZ
    output:
        directory(STAR_INDEX)
    threads: 4
    shell:
        r"""
        set -euo pipefail
        mkdir -p {output}
        gunzip -c {input.fasta} > {REF_DIR}/genome.fa
        STAR --runThreadN {threads} \
             --runMode genomeGenerate \
             --genomeDir {output} \
             --genomeFastaFiles {REF_DIR}/genome.fa
        """

# --- STAR alignment ---
rule star_align:
    input:
        reads = f"{TRIM_DIR}/SRR000648_trimmed.fastq.gz",
        index = STAR_INDEX
    output:
        bam = f"{ALIGN_DIR}/SRR000648.bam"
    threads: 4
    shell:
        r"""
        mkdir -p {ALIGN_DIR}
        STAR --runThreadN {threads} \
             --genomeDir {input.index} \
             --readFilesIn {input.reads} \
             --readFilesCommand zcat \
             --outSAMtype BAM SortedByCoordinate \
             --outFileNamePrefix {ALIGN_DIR}/SRR000648_

        mv {ALIGN_DIR}/SRR000648_Aligned.sortedByCoord.out.bam {output.bam}
        """
